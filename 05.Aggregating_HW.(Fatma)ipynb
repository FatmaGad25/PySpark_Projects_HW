{"cells":[{"cell_type":"markdown","metadata":{"id":"PQcSWf_6hWxY"},"source":["# Aggregating DataFrames in PySpark HW\n","\n","First let's start up our PySpark instance"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"X3vFOU4lhWxb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678047958077,"user_tz":-120,"elapsed":25487,"user":{"displayName":"Fatma Hussain Wageeh","userId":"06513492977475793482"}},"outputId":"701313f4-75f1-4503-a711-3cd3b3e2b1d7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive/\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive/', force_remount=True)"]},{"cell_type":"code","source":["# Install pyspark\n","!pip install pyspark\n","# import findspark\n","# findspark.init()\n","import os\n","import pyspark # only run after findspark.init()\n","from pyspark.sql import SparkSession\n","# May take awhile locally\n","spark = SparkSession.builder.appName(\"SparkSQL\").getOrCreate()\n","\n","cores = spark._jsc.sc().getExecutorMemoryStatus().keySet().size()\n","print(\"You are working with\", cores, \"core(s)\")\n","spark"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":497},"id":"H8dGOeDs_xze","executionInfo":{"status":"ok","timestamp":1678048010282,"user_tz":-120,"elapsed":52209,"user":{"displayName":"Fatma Hussain Wageeh","userId":"06513492977475793482"}},"outputId":"0a57fe3b-e1d1-44f9-825f-87e8a78b2a52"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting pyspark\n","  Downloading pyspark-3.3.2.tar.gz (281.4 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m281.4/281.4 MB\u001b[0m \u001b[31m4.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting py4j==0.10.9.5\n","  Downloading py4j-0.10.9.5-py2.py3-none-any.whl (199 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m199.7/199.7 KB\u001b[0m \u001b[31m23.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hBuilding wheels for collected packages: pyspark\n","  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyspark: filename=pyspark-3.3.2-py2.py3-none-any.whl size=281824025 sha256=9776a58ac70ef00199d2485604601883ba4891e3a982a52e8de331a4b4cf45ec\n","  Stored in directory: /root/.cache/pip/wheels/b1/59/a0/a1a0624b5e865fd389919c1a10f53aec9b12195d6747710baf\n","Successfully built pyspark\n","Installing collected packages: py4j, pyspark\n","Successfully installed py4j-0.10.9.5 pyspark-3.3.2\n","You are working with 1 core(s)\n"]},{"output_type":"execute_result","data":{"text/plain":["<pyspark.sql.session.SparkSession at 0x7f56e25bf2b0>"],"text/html":["\n","            <div>\n","                <p><b>SparkSession - in-memory</b></p>\n","                \n","        <div>\n","            <p><b>SparkContext</b></p>\n","\n","            <p><a href=\"http://e493292fb7bf:4040\">Spark UI</a></p>\n","\n","            <dl>\n","              <dt>Version</dt>\n","                <dd><code>v3.3.2</code></dd>\n","              <dt>Master</dt>\n","                <dd><code>local[*]</code></dd>\n","              <dt>AppName</dt>\n","                <dd><code>SparkSQL</code></dd>\n","            </dl>\n","        </div>\n","        \n","            </div>\n","        "]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["path = '/content/drive/MyDrive/Data Science Intake43/5. Spark/spark-scripts/section2/Datasets/'\n","os.listdir(path)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IV3kgC2k_xwg","executionInfo":{"status":"ok","timestamp":1678048012100,"user_tz":-120,"elapsed":1829,"user":{"displayName":"Fatma Hussain Wageeh","userId":"06513492977475793482"}},"outputId":"f45e6624-b541-4a25-8190-b1387030abee"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['people.json',\n"," 'zomato.csv',\n"," 'Weather.csv',\n"," 'youtubevideos.csv',\n"," 'googleplaystore.csv',\n"," 'fifa19.csv',\n"," 'students.csv',\n"," 'users1.parquet',\n"," 'users3.parquet',\n"," 'users2.parquet',\n"," 'nyc_air_bnb.csv',\n"," 'rec-crime-pfa.csv',\n"," 'supermarket_sales.csv',\n"," 'Rep_vs_Dem_tweets.csv',\n"," 'pga_tour_historical.csv',\n"," 'uw-madison-courses']"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"rattZSmNhWxb"},"source":["## Read in the dataFrame for this Notebook"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"LzjeW6I-hWxc","executionInfo":{"status":"ok","timestamp":1678048026664,"user_tz":-120,"elapsed":14568,"user":{"displayName":"Fatma Hussain Wageeh","userId":"06513492977475793482"}}},"outputs":[],"source":["airbnb = spark.read.csv(path+'nyc_air_bnb.csv',inferSchema=True,header=True)"]},{"cell_type":"markdown","metadata":{"id":"mIVRerLYhWxd"},"source":["## About this dataset\n","\n","This dataset describes the listing activity and metrics for Air BNB bookers in NYC, NY for 2019. Each line in the dataset is a booking. \n","\n","**Source:** https://www.kaggle.com/dgomonov/new-york-city-airbnb-open-data/data\n","\n","Let's go ahead and view the first few records of the dataset so we know what we are working with."]},{"cell_type":"code","execution_count":5,"metadata":{"id":"21WJ70p1hWxd","colab":{"base_uri":"https://localhost:8080/","height":461},"executionInfo":{"status":"ok","timestamp":1678048028044,"user_tz":-120,"elapsed":1392,"user":{"displayName":"Fatma Hussain Wageeh","userId":"06513492977475793482"}},"outputId":"7deab0a4-47b0-4e71-c956-20b307d096d3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     id                                              name host_id  \\\n","0  2539                Clean & quiet apt home by the park    2787   \n","1  2595                             Skylit Midtown Castle    2845   \n","2  3647               THE VILLAGE OF HARLEM....NEW YORK !    4632   \n","3  3831                   Cozy Entire Floor of Brownstone    4869   \n","4  5022  Entire Apt: Spacious Studio/Loft by central park    7192   \n","\n","     host_name neighbourhood_group neighbourhood  latitude  longitude  \\\n","0         John            Brooklyn    Kensington  40.64749  -73.97237   \n","1     Jennifer           Manhattan       Midtown  40.75362  -73.98377   \n","2    Elisabeth           Manhattan        Harlem  40.80902   -73.9419   \n","3  LisaRoxanne            Brooklyn  Clinton Hill  40.68514  -73.95976   \n","4        Laura           Manhattan   East Harlem  40.79851  -73.94399   \n","\n","         room_type price minimum_nights number_of_reviews last_review  \\\n","0     Private room   149              1                 9  2018-10-19   \n","1  Entire home/apt   225              1                45  2019-05-21   \n","2     Private room   150              3                 0        None   \n","3  Entire home/apt    89              1               270  2019-07-05   \n","4  Entire home/apt    80             10                 9  2018-11-19   \n","\n","  reviews_per_month calculated_host_listings_count  availability_365  \n","0              0.21                              6               365  \n","1              0.38                              2               355  \n","2              None                              1               365  \n","3              4.64                              1               194  \n","4              0.10                              1                 0  "],"text/html":["\n","  <div id=\"df-5016e688-d3f5-4c58-bca3-887ee71dc348\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>name</th>\n","      <th>host_id</th>\n","      <th>host_name</th>\n","      <th>neighbourhood_group</th>\n","      <th>neighbourhood</th>\n","      <th>latitude</th>\n","      <th>longitude</th>\n","      <th>room_type</th>\n","      <th>price</th>\n","      <th>minimum_nights</th>\n","      <th>number_of_reviews</th>\n","      <th>last_review</th>\n","      <th>reviews_per_month</th>\n","      <th>calculated_host_listings_count</th>\n","      <th>availability_365</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2539</td>\n","      <td>Clean &amp; quiet apt home by the park</td>\n","      <td>2787</td>\n","      <td>John</td>\n","      <td>Brooklyn</td>\n","      <td>Kensington</td>\n","      <td>40.64749</td>\n","      <td>-73.97237</td>\n","      <td>Private room</td>\n","      <td>149</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>2018-10-19</td>\n","      <td>0.21</td>\n","      <td>6</td>\n","      <td>365</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2595</td>\n","      <td>Skylit Midtown Castle</td>\n","      <td>2845</td>\n","      <td>Jennifer</td>\n","      <td>Manhattan</td>\n","      <td>Midtown</td>\n","      <td>40.75362</td>\n","      <td>-73.98377</td>\n","      <td>Entire home/apt</td>\n","      <td>225</td>\n","      <td>1</td>\n","      <td>45</td>\n","      <td>2019-05-21</td>\n","      <td>0.38</td>\n","      <td>2</td>\n","      <td>355</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3647</td>\n","      <td>THE VILLAGE OF HARLEM....NEW YORK !</td>\n","      <td>4632</td>\n","      <td>Elisabeth</td>\n","      <td>Manhattan</td>\n","      <td>Harlem</td>\n","      <td>40.80902</td>\n","      <td>-73.9419</td>\n","      <td>Private room</td>\n","      <td>150</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>1</td>\n","      <td>365</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3831</td>\n","      <td>Cozy Entire Floor of Brownstone</td>\n","      <td>4869</td>\n","      <td>LisaRoxanne</td>\n","      <td>Brooklyn</td>\n","      <td>Clinton Hill</td>\n","      <td>40.68514</td>\n","      <td>-73.95976</td>\n","      <td>Entire home/apt</td>\n","      <td>89</td>\n","      <td>1</td>\n","      <td>270</td>\n","      <td>2019-07-05</td>\n","      <td>4.64</td>\n","      <td>1</td>\n","      <td>194</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5022</td>\n","      <td>Entire Apt: Spacious Studio/Loft by central park</td>\n","      <td>7192</td>\n","      <td>Laura</td>\n","      <td>Manhattan</td>\n","      <td>East Harlem</td>\n","      <td>40.79851</td>\n","      <td>-73.94399</td>\n","      <td>Entire home/apt</td>\n","      <td>80</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>2018-11-19</td>\n","      <td>0.10</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5016e688-d3f5-4c58-bca3-887ee71dc348')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5016e688-d3f5-4c58-bca3-887ee71dc348 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5016e688-d3f5-4c58-bca3-887ee71dc348');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}],"source":["airbnb.limit(5).toPandas()"]},{"cell_type":"markdown","metadata":{"id":"404vwsiMhWxe"},"source":["Now print the schema so we can make sure all the variables have the correct types"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"JFmwLIejhWxe","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678048078233,"user_tz":-120,"elapsed":334,"user":{"displayName":"Fatma Hussain Wageeh","userId":"06513492977475793482"}},"outputId":"93cf5bf0-0098-4b45-fb7e-298e160ab6df"},"outputs":[{"output_type":"stream","name":"stdout","text":["root\n"," |-- id: string (nullable = true)\n"," |-- name: string (nullable = true)\n"," |-- host_id: string (nullable = true)\n"," |-- host_name: string (nullable = true)\n"," |-- neighbourhood_group: string (nullable = true)\n"," |-- neighbourhood: string (nullable = true)\n"," |-- latitude: string (nullable = true)\n"," |-- longitude: string (nullable = true)\n"," |-- room_type: string (nullable = true)\n"," |-- price: string (nullable = true)\n"," |-- minimum_nights: string (nullable = true)\n"," |-- number_of_reviews: string (nullable = true)\n"," |-- last_review: string (nullable = true)\n"," |-- reviews_per_month: string (nullable = true)\n"," |-- calculated_host_listings_count: string (nullable = true)\n"," |-- availability_365: integer (nullable = true)\n","\n"]}],"source":["airbnb.printSchema()"]},{"cell_type":"markdown","metadata":{"id":"8cF2OegPhWxe"},"source":["Notice here that some of the columns that are obviously numeric have been incorrectly identified as \"strings\". Let's edit that. Otherwise we cannot aggregate any of the numeric columns."]},{"cell_type":"code","execution_count":7,"metadata":{"id":"diW-6mkWhWxe","colab":{"base_uri":"https://localhost:8080/","height":790},"executionInfo":{"status":"ok","timestamp":1678048079275,"user_tz":-120,"elapsed":621,"user":{"displayName":"Fatma Hussain Wageeh","userId":"06513492977475793482"}},"outputId":"045873f8-c6c0-474c-8b3b-9c3ad222a08c"},"outputs":[{"output_type":"stream","name":"stdout","text":["root\n"," |-- id: string (nullable = true)\n"," |-- name: string (nullable = true)\n"," |-- host_id: string (nullable = true)\n"," |-- host_name: string (nullable = true)\n"," |-- neighbourhood_group: string (nullable = true)\n"," |-- neighbourhood: string (nullable = true)\n"," |-- latitude: string (nullable = true)\n"," |-- longitude: string (nullable = true)\n"," |-- room_type: string (nullable = true)\n"," |-- price: integer (nullable = true)\n"," |-- minimum_nights: integer (nullable = true)\n"," |-- number_of_reviews: integer (nullable = true)\n"," |-- last_review: string (nullable = true)\n"," |-- reviews_per_month: integer (nullable = true)\n"," |-- calculated_host_listings_count: integer (nullable = true)\n"," |-- availability_365: integer (nullable = true)\n","\n","None\n"]},{"output_type":"execute_result","data":{"text/plain":["     id                                              name host_id  \\\n","0  2539                Clean & quiet apt home by the park    2787   \n","1  2595                             Skylit Midtown Castle    2845   \n","2  3647               THE VILLAGE OF HARLEM....NEW YORK !    4632   \n","3  3831                   Cozy Entire Floor of Brownstone    4869   \n","4  5022  Entire Apt: Spacious Studio/Loft by central park    7192   \n","\n","     host_name neighbourhood_group neighbourhood  latitude  longitude  \\\n","0         John            Brooklyn    Kensington  40.64749  -73.97237   \n","1     Jennifer           Manhattan       Midtown  40.75362  -73.98377   \n","2    Elisabeth           Manhattan        Harlem  40.80902   -73.9419   \n","3  LisaRoxanne            Brooklyn  Clinton Hill  40.68514  -73.95976   \n","4        Laura           Manhattan   East Harlem  40.79851  -73.94399   \n","\n","         room_type  price  minimum_nights  number_of_reviews last_review  \\\n","0     Private room    149               1                  9  2018-10-19   \n","1  Entire home/apt    225               1                 45  2019-05-21   \n","2     Private room    150               3                  0        None   \n","3  Entire home/apt     89               1                270  2019-07-05   \n","4  Entire home/apt     80              10                  9  2018-11-19   \n","\n","   reviews_per_month  calculated_host_listings_count  availability_365  \n","0                0.0                               6               365  \n","1                0.0                               2               355  \n","2                NaN                               1               365  \n","3                4.0                               1               194  \n","4                0.0                               1                 0  "],"text/html":["\n","  <div id=\"df-f422a081-6ce9-4910-a674-9cfe2c623722\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>name</th>\n","      <th>host_id</th>\n","      <th>host_name</th>\n","      <th>neighbourhood_group</th>\n","      <th>neighbourhood</th>\n","      <th>latitude</th>\n","      <th>longitude</th>\n","      <th>room_type</th>\n","      <th>price</th>\n","      <th>minimum_nights</th>\n","      <th>number_of_reviews</th>\n","      <th>last_review</th>\n","      <th>reviews_per_month</th>\n","      <th>calculated_host_listings_count</th>\n","      <th>availability_365</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2539</td>\n","      <td>Clean &amp; quiet apt home by the park</td>\n","      <td>2787</td>\n","      <td>John</td>\n","      <td>Brooklyn</td>\n","      <td>Kensington</td>\n","      <td>40.64749</td>\n","      <td>-73.97237</td>\n","      <td>Private room</td>\n","      <td>149</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>2018-10-19</td>\n","      <td>0.0</td>\n","      <td>6</td>\n","      <td>365</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2595</td>\n","      <td>Skylit Midtown Castle</td>\n","      <td>2845</td>\n","      <td>Jennifer</td>\n","      <td>Manhattan</td>\n","      <td>Midtown</td>\n","      <td>40.75362</td>\n","      <td>-73.98377</td>\n","      <td>Entire home/apt</td>\n","      <td>225</td>\n","      <td>1</td>\n","      <td>45</td>\n","      <td>2019-05-21</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>355</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3647</td>\n","      <td>THE VILLAGE OF HARLEM....NEW YORK !</td>\n","      <td>4632</td>\n","      <td>Elisabeth</td>\n","      <td>Manhattan</td>\n","      <td>Harlem</td>\n","      <td>40.80902</td>\n","      <td>-73.9419</td>\n","      <td>Private room</td>\n","      <td>150</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>None</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>365</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3831</td>\n","      <td>Cozy Entire Floor of Brownstone</td>\n","      <td>4869</td>\n","      <td>LisaRoxanne</td>\n","      <td>Brooklyn</td>\n","      <td>Clinton Hill</td>\n","      <td>40.68514</td>\n","      <td>-73.95976</td>\n","      <td>Entire home/apt</td>\n","      <td>89</td>\n","      <td>1</td>\n","      <td>270</td>\n","      <td>2019-07-05</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","      <td>194</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5022</td>\n","      <td>Entire Apt: Spacious Studio/Loft by central park</td>\n","      <td>7192</td>\n","      <td>Laura</td>\n","      <td>Manhattan</td>\n","      <td>East Harlem</td>\n","      <td>40.79851</td>\n","      <td>-73.94399</td>\n","      <td>Entire home/apt</td>\n","      <td>80</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>2018-11-19</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f422a081-6ce9-4910-a674-9cfe2c623722')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f422a081-6ce9-4910-a674-9cfe2c623722 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f422a081-6ce9-4910-a674-9cfe2c623722');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}],"source":["from pyspark.sql.types import *\n","from pyspark.sql.functions import *\n","\n","df = airbnb.withColumn(\"price\", airbnb[\"price\"].cast(IntegerType())) \\\n","        .withColumn(\"minimum_nights\", airbnb[\"minimum_nights\"].cast(IntegerType())) \\\n","        .withColumn(\"number_of_reviews\", airbnb[\"number_of_reviews\"].cast(IntegerType())) \\\n","        .withColumn(\"reviews_per_month\", airbnb[\"reviews_per_month\"].cast(IntegerType())) \\\n","        .withColumn(\"calculated_host_listings_count\", airbnb[\"calculated_host_listings_count\"].cast(IntegerType()))\n","#QA\n","print(df.printSchema())\n","df.limit(5).toPandas()"]},{"cell_type":"markdown","metadata":{"id":"_BhP8rqUhWxf"},"source":["### Alright now we are ready to dig in!\n","\n","\n","### 1. How many rows are in this dataset?"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"GMpzB4TchWxf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678048083450,"user_tz":-120,"elapsed":1596,"user":{"displayName":"Fatma Hussain Wageeh","userId":"06513492977475793482"}},"outputId":"ed322fdd-6a5c-4bdf-e7cc-796e0e0da98c"},"outputs":[{"output_type":"stream","name":"stdout","text":["(49079, 16)\n"]},{"output_type":"execute_result","data":{"text/plain":["49079"]},"metadata":{},"execution_count":8}],"source":["# data shape\n","print((df.count(), len(df.columns)))\n","df.count()"]},{"cell_type":"markdown","metadata":{"id":"SKyye3ZhhWxf"},"source":["### 2. How many total reviews does each host have?"]},{"cell_type":"code","source":["from pyspark.sql.functions import *"],"metadata":{"id":"PX8f_aXPA7bn","executionInfo":{"status":"ok","timestamp":1678048083451,"user_tz":-120,"elapsed":4,"user":{"displayName":"Fatma Hussain Wageeh","userId":"06513492977475793482"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mmpvnUX4hWxg"},"outputs":[],"source":["airbnb.groupBy('host_id').agg({'number_of_reviews':'sum'}).show(5)"]},{"cell_type":"markdown","metadata":{"id":"ViFL_MOKhWxg"},"source":["### 3. Show the min and max of all the numeric variables in the dataset"]},{"cell_type":"code","source":["num_cols = [f.name for f in df.schema.fields if isinstance(f.dataType, IntegerType)]\n","num_cols"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DTsqYFaoCZB6","executionInfo":{"status":"ok","timestamp":1676063038255,"user_tz":-120,"elapsed":29,"user":{"displayName":"Fatma Hussain Wageeh","userId":"06513492977475793482"}},"outputId":"595e3d11-9aed-4145-bb04-79e6e7bfa8c6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['price',\n"," 'minimum_nights',\n"," 'number_of_reviews',\n"," 'reviews_per_month',\n"," 'calculated_host_listings_count',\n"," 'availability_365']"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MOj63UkjhWxg","colab":{"base_uri":"https://localhost:8080/","height":193},"executionInfo":{"status":"ok","timestamp":1676063041330,"user_tz":-120,"elapsed":3098,"user":{"displayName":"Fatma Hussain Wageeh","userId":"06513492977475793482"}},"outputId":"8f463d94-9168-45f8-ed39-ffef2034ea51"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  summary         price minimum_nights number_of_reviews reviews_per_month  \\\n","0     min     -73.99986              0                 0                 0   \n","1     max  Private room   Private room                99      Private room   \n","\n","  calculated_host_listings_count availability_365  \n","0                              0                0  \n","1                             99              365  "],"text/html":["\n","  <div id=\"df-202fd09e-32cc-4e18-974f-09a35740fb76\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>summary</th>\n","      <th>price</th>\n","      <th>minimum_nights</th>\n","      <th>number_of_reviews</th>\n","      <th>reviews_per_month</th>\n","      <th>calculated_host_listings_count</th>\n","      <th>availability_365</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>min</td>\n","      <td>-73.99986</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>max</td>\n","      <td>Private room</td>\n","      <td>Private room</td>\n","      <td>99</td>\n","      <td>Private room</td>\n","      <td>99</td>\n","      <td>365</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-202fd09e-32cc-4e18-974f-09a35740fb76')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-202fd09e-32cc-4e18-974f-09a35740fb76 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-202fd09e-32cc-4e18-974f-09a35740fb76');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}],"source":["airbnb.select(num_cols).summary('min', 'max').toPandas()"]},{"cell_type":"markdown","metadata":{"id":"tgayIlELhWxg"},"source":["### 4. Which host had the highest number of reviews?\n","\n","Only display the top result.\n","\n","Bonus: format the column names"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1f9IrdyHhWxg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676063043595,"user_tz":-120,"elapsed":2276,"user":{"displayName":"Fatma Hussain Wageeh","userId":"06513492977475793482"}},"outputId":"95640e08-83ca-4c7a-d625-68121d8c6f71"},"outputs":[{"output_type":"stream","name":"stdout","text":["+--------+-------+\n","| host_id|Rev_Sum|\n","+--------+-------+\n","|37312959| 2273.0|\n","+--------+-------+\n","only showing top 1 row\n","\n"]}],"source":["hosts_rev = airbnb.groupBy('host_id').agg(sum(airbnb.number_of_reviews).alias('Rev_Sum'))\n","hosts_rev.orderBy(hosts_rev['Rev_Sum'].desc()).show(1)"]},{"cell_type":"markdown","metadata":{"id":"jkUWkHhhhWxh"},"source":["### 5. On average, how many nights did most hosts specify for a minimum?"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"g8frjFcVhWxh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676063045749,"user_tz":-120,"elapsed":2160,"user":{"displayName":"Fatma Hussain Wageeh","userId":"06513492977475793482"}},"outputId":"dc252a6b-082a-4cc0-e3c8-1b74ef5b7d25"},"outputs":[{"output_type":"stream","name":"stdout","text":["+-------+-------------------+\n","|host_id|avg(minimum_nights)|\n","+-------+-------------------+\n","| 716306|                1.0|\n","|1203500|                2.0|\n","| 368528|                1.0|\n","|1577493|                3.0|\n","|1390555|                1.0|\n","|1317588|               30.0|\n","|2472680|                4.0|\n","|2155832|                4.0|\n","|2426404|                6.0|\n","|2740824|               11.0|\n","+-------+-------------------+\n","only showing top 10 rows\n","\n"]}],"source":["airbnb.groupBy('host_id').agg({'minimum_nights':'mean'}).show(10)"]},{"cell_type":"markdown","metadata":{"id":"MlkqfEJthWxh"},"source":["### 6. What is the most expensive neighborhood to stay in on average?\n","\n","Note: only show the one result"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SGFdB-KYhWxh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676063047564,"user_tz":-120,"elapsed":1830,"user":{"displayName":"Fatma Hussain Wageeh","userId":"06513492977475793482"}},"outputId":"358b4311-d26e-4a12-d3c7-5bbadbe76ad6"},"outputs":[{"output_type":"stream","name":"stdout","text":["+-------------------+------------------+\n","|neighbourhood_group|         avg_price|\n","+-------------------+------------------+\n","|          Manhattan|196.74321570806705|\n","+-------------------+------------------+\n","only showing top 1 row\n","\n"]}],"source":["neighb_price = airbnb.groupBy('neighbourhood_group').agg(mean(airbnb.price).alias('avg_price'))\n","neighb_price.orderBy('avg_price', ascending = False).show(1)"]},{"cell_type":"markdown","metadata":{"id":"luX0lgYghWxh"},"source":["### 7. Display a two by two table that shows the average prices by room type (private and shared only) and neighborhood group (Manhattan and Brooklyn only)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WBK8dC_DhWxi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676063051432,"user_tz":-120,"elapsed":3882,"user":{"displayName":"Fatma Hussain Wageeh","userId":"06513492977475793482"}},"outputId":"1c86c13b-0ec0-441e-e015-425306ee7bd8"},"outputs":[{"output_type":"stream","name":"stdout","text":["+------------+------------------+-----------------+\n","|   room_type|         Manhattan|         Brooklyn|\n","+------------+------------------+-----------------+\n","| Shared room| 89.06903765690376|50.52784503631961|\n","|Private room|116.05400302114803|76.47234042553191|\n","+------------+------------------+-----------------+\n","\n"]}],"source":["airbnb.filter(airbnb.room_type.isin('Shared room', 'Private room')).groupBy(\"room_type\").pivot(\"neighbourhood_group\", [\"Manhattan\", \"Brooklyn\"]).agg(mean(airbnb.price).alias(\"Avg Price\")).show(10)"]},{"cell_type":"markdown","metadata":{"id":"I0H4jMEohWxi"},"source":["### Alright that's all folks!\n","\n","### Great job!"]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.8"},"colab":{"provenance":[{"file_id":"1VqgYdl5_0z8JFiO7LyAo8HJpK090XNsZ","timestamp":1676060470646}]}},"nbformat":4,"nbformat_minor":0}